"use strict";(self.webpackChunkterra_website=self.webpackChunkterra_website||[]).push([[1805],{3424:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"standard-library/unit-testing/organizing-tests-testset","title":"Test-sets","description":"testset provides another scoped environment that can be used within a testenv. A testset is also given a name and test statistics are printed out separately for each testset inside a test environment. For example,","source":"@site/docs/standard-library/unit-testing/organizing-tests-testset.md","sourceDirName":"standard-library/unit-testing","slug":"/standard-library/unit-testing/organizing-tests-testset","permalink":"/terra-website/docs/standard-library/unit-testing/organizing-tests-testset","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/standard-library/unit-testing/organizing-tests-testset.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Test-environments","permalink":"/terra-website/docs/standard-library/unit-testing/organizing-tests-testenv"},"next":{"title":"Parameterized testing","permalink":"/terra-website/docs/standard-library/unit-testing/parameterized-tests"}}');var r=s(4848),i=s(8453);const a={},d="Test-sets",o={},c=[];function l(e){const t={admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"test-sets",children:"Test-sets"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"testset"})," provides another scoped environment that can be used within a ",(0,r.jsx)(t.code,{children:"testenv"}),". A testset is also given a name and test statistics are printed out separately for each testset inside a test environment. For example,"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-terra",children:'import "terratest"\n\ntestenv "first test environement" do\n  local z = 10\n  terracode\n    var x = 1 \n  end\n \n  testset "my first testset" do\n    terracode\n      var y = 2 \n    end \n    test x+y+z==13\n  end\n \n  testset "my second testset" do\n    terracode\n      var p = 5 \n    end \n    test x+z+p==16\n  end \nend\n'})}),"\n",(0,r.jsx)(t.p,{children:"evaluates to stdout"}),"\n",(0,r.jsxs)("pre",{children:[(0,r.jsx)("div",{class:"string",children:"Test Environment: \tfirst test environement"}),(0,r.jsx)("br",{}),(0,r.jsx)("div",{class:"string",children:"testset:\t\tmy first testset"}),(0,r.jsx)("div",{class:"test-passed",children:"    1/1 tests passed"}),(0,r.jsx)("br",{}),(0,r.jsx)("div",{class:"string",children:"testset:\t\tmy second testset"}),(0,r.jsx)("div",{class:"test-passed",children:"    1/1 tests passed"})]}),"\n",(0,r.jsxs)(t.p,{children:["Both testset blocks reuse the Lua variable ",(0,r.jsx)(t.code,{children:"z"})," and Terra variable ",(0,r.jsx)(t.code,{children:"x"})," defined earlier in the ",(0,r.jsx)(t.code,{children:"testenv"}),". Additionally, each testset introduces its own variables\u2014",(0,r.jsx)(t.code,{children:"y"})," in the first and ",(0,r.jsx)(t.code,{children:"p"})," in the second\u2014which are scoped locally and accessible only within their respective testset."]}),"\n",(0,r.jsx)(t.admonition,{title:"Important",type:"caution",children:(0,r.jsxs)(t.p,{children:["Testset environments are isolated from one another. For example, if ",(0,r.jsx)(t.code,{children:"x"})," were modified in the first testset, that change would not affect the second. This isolation ensures hygienic scoping, preventing unintended interference between testsets."]})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>d});var n=s(6540);const r={},i=n.createContext(r);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);