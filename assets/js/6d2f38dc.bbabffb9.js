"use strict";(self.webpackChunkterra_website=self.webpackChunkterra_website||[]).push([[9911],{1004:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"features/script-with-c-performance","title":"Script with C-performance","description":"Terra is a simple and expressive statically typed compiled language built on top of LuaJIT, the fastest JIT-compiler in the West. This unique combination allows Terra to deliver performance comparable to C while maintaining the flexibility and ease of a scripting language.","source":"@site/docs/features/script-with-c-performance.md","sourceDirName":"features","slug":"/features/script-with-c-performance","permalink":"/terra-website/docs/features/script-with-c-performance","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/features/script-with-c-performance.md","tags":[],"version":"current","frontMatter":{"id":"script-with-c-performance","title":"Script with C-performance"}}');var t=n(4848),i=n(8453);const o={id:"script-with-c-performance",title:"Script with C-performance"},s="Script with C-performance",c={},l=[{value:"High Performance via LuaJIT",id:"high-performance-via-luajit",level:2}];function p(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"script-with-c-performance",children:"Script with C-performance"})}),"\n",(0,t.jsx)(r.p,{children:"Terra is a simple and expressive statically typed compiled language built on top of LuaJIT, the fastest JIT-compiler in the West. This unique combination allows Terra to deliver performance comparable to C while maintaining the flexibility and ease of a scripting language."}),"\n",(0,t.jsx)(r.h2,{id:"high-performance-via-luajit",children:"High Performance via LuaJIT"}),"\n",(0,t.jsxs)(r.p,{children:["Terra leverages LuaJIT\u2019s powerful JIT (Just-In-Time) compilation capabilities, which use the same LLVM backend as Apple\u2019s C compilers. This means Terra code achieves near-C performance\u2014often within 5% of equivalent C code compiled with Clang, as demonstrated by benchmarks like ",(0,t.jsx)(r.code,{children:"nbody"})," and ",(0,t.jsx)(r.code,{children:"fannhakunen"})," from the ",(0,t.jsx)(r.a,{href:"http://benchmarksgame.alioth.debian.org",children:"Programming Language Benchmark Game"}),". Here\u2019s a simple example from Terra\u2019s introduction:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-terra",children:'-- Plain Lua code\nfunction printhello()\n    print("Hello, Lua!")\nend\nprinthello()\n\n-- Terra code JIT-compiled via LuaJIT\nC = terralib.includec("stdio.h")\nterra hello(argc : int, argv : &rawstring)\n    C.printf("Hello, Terra!\\n")\n    return 0\nend\nhello(0, nil) -- JIT-compiled and executed\n\n\n\n__Terra__ is a low-level system programming language that is embedded in and meta-programmed by the __Lua__ programming language:\n```terra\n--This top-level code is plain Lua code.\nfunction printhello()\n    -- This is a plain Lua function\n    print("Hello, Lua!")\nend\nprinthello()\n\n-- Terra is backwards compatible with C, we\'ll use C\'s io library in our example.\nC = terralib.includec("stdio.h")\n\n-- The keyword \'terra\' introduces a new Terra function.\nterra hello(argc : int, argv : &rawstring)\n    -- Here we call a C function from Terra\n    C.printf("Hello, Terra!\\n")\n    return 0\nend\n\n-- You can call Terra functions directly from Lua, they are JIT compiled \n-- using LLVM to create machine code\nhello(0,nil)\n\n-- Terra functions are first-class values in Lua, and can be introspected \n-- and meta-programmed using it\nhello:disas()\n--[[ output:\n    assembly for function at address 0x60e6010\n    0x60e6010(+0):\t\tpush\trax\n    0x60e6011(+1):\t\tmovabs\trdi, 102129664\n    0x60e601b(+11):\t\tmovabs\trax, 140735712154681\n    0x60e6025(+21):\t\tcall\trax\n    0x60e6027(+23):\t\txor\teax, eax\n    0x60e6029(+25):\t\tpop\trdx\n    0x60e602a(+26):\t\tret\n]]\n\n-- You can save Terra code as executables, object files, or shared libraries \n-- and link them into existing programs\nterralib.saveobj("helloterra",{ main = hello })\n'})}),"\n",(0,t.jsxs)(r.p,{children:["Try this example and others in your browser via ",(0,t.jsx)(r.a,{href:"https://replit.com/@terralang/terra",children:"Replit"}),"."]})]})}function d(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>s});var a=n(6540);const t={},i=a.createContext(t);function o(e){const r=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(i.Provider,{value:r},e.children)}}}]);